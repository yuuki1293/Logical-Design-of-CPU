$date
	Fri Apr 18 14:31:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_tp $end
$var wire 4 ! q [3:0] $end
$var parameter 32 " STEP $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module adder_ripple $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 4 ' q [3:0] $end
$var wire 4 ( cout [3:0] $end
$scope module add0 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 + CIN $end
$var wire 1 , COUT $end
$var wire 1 - Q $end
$upscope $end
$scope module add1 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 CIN $end
$var wire 1 1 COUT $end
$var wire 1 2 Q $end
$upscope $end
$scope module add2 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 CIN $end
$var wire 1 6 COUT $end
$var wire 1 7 Q $end
$upscope $end
$scope module add3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : CIN $end
$var wire 1 ; COUT $end
$var wire 1 < Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11000011010100000 "
$end
#0
$dumpvars
0<
0;
0:
09
08
17
06
05
04
13
12
01
00
1/
0.
1-
0,
0+
1*
0)
b0 (
b111 '
b11 &
b100 %
b11 $
b100 #
b111 !
$end
#100000
1<
1:
b100 (
16
0-
02
b1000 !
b1000 '
07
0*
0/
14
b100 $
b100 &
#200000
b1100 (
1;
19
18
b1100 $
b1100 &
b1100 #
b1100 %
#300000
0<
0:
b1000 (
06
1-
12
b111 !
b111 '
17
1*
1/
04
b1011 $
b1011 &
#400000
